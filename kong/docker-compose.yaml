##
## Kong docker-compose for fast installation
##
version: "3.7"

networks:
 kong-net:
  name: kong-net
  driver: bridge
  ipam:
    config:
      - subnet: 172.1.1.0/24

services:
  kong-database:
    container_name: db
    image: postgres:13
    restart: unless-stopped
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kongpass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 3s
      retries: 5

  kong-bootstrap:
    container_name: bootstrap
    image: kong/kong-gateway:3.5.0.2
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kongpass
      KONG_PASSWORD: test
    links:
      - kong-database
    depends_on:
      - kong-database

  kong-gateway:
    container_name: kong
    image: kong/kong-gateway:3.5.0.2
    restart: unless-stopped
    networks:
      kong-net:
        ipv4_address: 172.1.1.40
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    depends_on:
      - kong-bootstrap
      - kong-database
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 3s
      retries: 10
    ports:
      - "80:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
      - "8445:8445"
      - "8003:8003"
      - "8004:8004"
      
  #######################################
  # Demo services : alpha, beta, gamma, omega
  #######################################
  alpha:
    container_name: alpha
    image: timpamungkas/alpha:latest
    restart: unless-stopped
    networks:
      kong-net:
        ipv4_address: 172.1.1.11
    ports:
      - "9001:9001"

  beta:
    container_name: beta
    image: timpamungkas/beta:latest
    restart: unless-stopped
    networks:
      kong-net:
        ipv4_address: 172.1.1.12
    ports:
      - "9002:9002"

  gamma:
    container_name: gamma
    image: timpamungkas/gamma:latest
    restart: unless-stopped
    networks:
      kong-net:
        ipv4_address: 172.1.1.13
    ports:
      - "9003:9003"

  omega:
    container_name: omega
    image: timpamungkas/omega:latest
    restart: unless-stopped
    networks:
      kong-net:
        ipv4_address: 172.1.1.14
    ports:
      - "9004:9004"

  # zipkin:
  #   image: openzipkin/zipkin:2
  #   container_name: zipkin
  #   restart: no
  #   networks:
  #     - kong-net
  #   ports:
  #     - "9411:9411"

  elasticsearch:
    image: elasticsearch:8.11.3
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx1024m
      - discovery.type=single-node
    networks:
      kong-net:
        ipv4_address: 172.1.1.21

  kibana:
    image: kibana:8.11.3
    container_name: kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    networks:
      kong-net:
        ipv4_address: 172.1.1.22

  logstash:
    image: logstash:8.11.3
    container_name: logstash
    restart: unless-stopped
    ports:
      - "5555:5555/udp"
      - "5044:5044"
      - "9600:9600"
    volumes:
      - "./logstash/:/usr/share/logstash/pipeline/"
    environment:
      - MONITORING_ENABLED=false
    networks:
      kong-net:
        ipv4_address: 172.1.1.23  

  # prometheus:
  #   image: prom/prometheus:v2.48.1
  #   container_name: prometheus
  #   restart: unless-stopped
  #   networks:
  #     - kong-net
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./config/prometheus.yml:/etc/prometheus/prometheus.yml

  # grafana:
  #   image: grafana/grafana-enterprise:10.2.3
  #   container_name: grafana
  #   restart: unless-stopped
  #   networks:
  #     - kong-net
  #   ports:
  #     - "3000:3000"  

  # console:
  #   container_name: console
  #   image: nicolaka/netshoot:latest
  #   restart: no
  #   command: sh -c "sleep 1000 > /dev/null"
  #   networks:
  #     - kong-net